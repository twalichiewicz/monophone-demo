.track-nub-container {
  position: fixed;
  bottom: 0;
  right: 0;
  width: 90px;
  height: 90px;
  z-index: 150;
  background: 
    radial-gradient(ellipse at 30% 30%, #1f1f1f 0%, #1a1a1a 40%, #161616 100%);
  border-radius: 45px 0 0 0;
  padding: 15px;
  box-shadow: 
    /* Outer shadow */
    0 -3px 20px rgba(0, 0, 0, 0.9),
    0 -1px 5px rgba(0, 0, 0, 0.7),
    /* Edge highlights */
    inset 0 1px 0 rgba(255, 255, 255, 0.06),
    inset -1px 0 0 rgba(255, 255, 255, 0.04),
    /* Inner shadows */
    inset 0 -1px 0 rgba(0, 0, 0, 0.9),
    inset 1px 0 0 rgba(0, 0, 0, 0.7);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  touch-action: none;
}

/* Photorealistic trackpad surface */
.trackpad-surface {
  position: absolute;
  top: 15px;
  left: 15px;
  right: 15px;
  bottom: 15px;
  border-radius: 50%;
  background: 
    /* Micro scratches and wear */
    radial-gradient(ellipse at 20% 30%, rgba(255, 255, 255, 0.02) 0%, transparent 20%),
    radial-gradient(ellipse at 80% 70%, rgba(255, 255, 255, 0.015) 0%, transparent 30%),
    radial-gradient(ellipse at 60% 20%, rgba(255, 255, 255, 0.01) 0%, transparent 25%),
    /* Light reflection */
    radial-gradient(circle at 30% 30%, rgba(255, 255, 255, 0.06) 0%, transparent 40%),
    /* Depth shadow */
    radial-gradient(circle at 70% 70%, rgba(0, 0, 0, 0.4) 0%, transparent 60%),
    /* Base material */
    linear-gradient(135deg, #0f0f0f 0%, #1a1a1a 45%, #141414 55%, #0a0a0a 100%);
  pointer-events: auto;
  box-shadow: 
    inset 0 3px 8px rgba(0, 0, 0, 0.95),
    inset 0 -2px 5px rgba(255, 255, 255, 0.025),
    inset 0 0 3px rgba(0, 0, 0, 0.7),
    inset 0 1px 0 rgba(255, 255, 255, 0.04),
    0 1px 2px rgba(0, 0, 0, 0.9);
  overflow: hidden;
  z-index: 2;
  position: relative;
}

/* Micro-texture overlay */
.trackpad-surface::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: 50%;
  background: 
    /* Fine circular texture pattern */
    repeating-radial-gradient(
      circle at center,
      transparent 0,
      transparent 3px,
      rgba(0, 0, 0, 0.03) 3px,
      rgba(0, 0, 0, 0.03) 3.5px
    ),
    /* Diagonal micro-grooves */
    repeating-linear-gradient(
      45deg,
      transparent,
      transparent 2px,
      rgba(255, 255, 255, 0.01) 2px,
      rgba(255, 255, 255, 0.01) 2.5px
    ),
    /* Cross-hatch pattern */
    repeating-linear-gradient(
      -45deg,
      transparent,
      transparent 2px,
      rgba(0, 0, 0, 0.02) 2px,
      rgba(0, 0, 0, 0.02) 2.5px
    );
  mix-blend-mode: overlay;
  opacity: 0.8;
}

/* Touch indicator - photorealistic press effect */
.trackpad-surface::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background: radial-gradient(
    circle at center,
    rgba(255, 255, 255, 0.08) 0%,
    rgba(255, 255, 255, 0.04) 30%,
    transparent 70%
  );
  opacity: 0;
  transition: opacity 0.15s ease-out, width 0.15s ease-out, height 0.15s ease-out;
}

.track-nub-container.active .trackpad-surface::after {
  opacity: 1;
  width: 60px;
  height: 60px;
}

/* Noise texture layer for added realism */
.texture-layer {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: 50%;
  opacity: 0.4;
  background-image: 
    url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='4' /%3E%3C/filter%3E%3Crect width='100' height='100' filter='url(%23noise)' opacity='0.02'/%3E%3C/svg%3E");
  background-size: 3px 3px;
  mix-blend-mode: overlay;
  pointer-events: none;
}

/* Pressed state - subtle inset effect */
.track-nub-container.active .trackpad-surface {
  box-shadow: 
    inset 0 4px 10px rgba(0, 0, 0, 0.95),
    inset 0 -1px 4px rgba(255, 255, 255, 0.02),
    inset 0 0 3px rgba(0, 0, 0, 0.7),
    0 0.5px 1px rgba(0, 0, 0, 0.9);
  transform: translateY(0.5px);
}

.track-nub-container.active .texture-layer {
  opacity: 0.5;
}

.track-nub-container::before {
  display: none;
}

.track-nub-container::after {
  display: none;
}

.track-nub {
  position: relative;
  width: 60px;
  height: 60px;
  cursor: pointer;
  transition: transform 0.08s ease-out;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
  touch-action: none;
  pointer-events: none;
}

.track-nub::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 80px;
  height: 80px;
  border: 2px solid rgba(255, 255, 255, 0.1);
  border-radius: 50%;
  pointer-events: none;
  opacity: 0;
  transition: opacity 0.2s ease;
}

.track-nub.pressed::after {
  opacity: 1;
}

.nub-surface {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background: radial-gradient(circle at center, rgba(255, 255, 255, 0.1) 0%, transparent 70%);
  opacity: 0;
  transition: all 0.2s ease;
  pointer-events: none;
}

.track-nub.pressed .nub-surface {
  opacity: 1;
  width: 60px;
  height: 60px;
}

/* Hide unused elements */
.nub-texture,
.nub-highlight,
.nub-shadow {
  display: none;
}

/* Click zones visualization (only visible during press) */
.click-zones {
  position: absolute;
  top: 30px;
  left: 30px;
  right: 30px;
  bottom: 30px;
  border-radius: 50%;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr 1fr;
  gap: 2px;
  opacity: 0;
  transition: opacity 0.2s ease;
  pointer-events: none;
}

.track-nub-container.showing-zones .click-zones {
  opacity: 0.1;
}

.click-zone {
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.click-zone:first-child {
  border-radius: 100% 0 0 0;
}

.click-zone:nth-child(2) {
  border-radius: 0 100% 0 0;
}

.click-zone:nth-child(3) {
  border-radius: 0 0 0 100%;
}

.click-zone:last-child {
  border-radius: 0 0 100% 0;
}

/* Long press Siri-like glow effect */
.track-nub-container.long-press {
  animation: siriGlow 0.5s ease-out forwards;
}

.track-nub-container.long-press .trackpad-surface {
  animation: siriPulse 2s ease-in-out infinite;
}

@keyframes siriGlow {
  0% {
    box-shadow: 
      0 0 0 3px #1a1a1a,
      0 -4px 20px rgba(0, 0, 0, 0.6),
      inset 0 2px 8px rgba(0, 0, 0, 0.9);
  }
  100% {
    box-shadow: 
      0 0 0 1px #1a1a1a,
      0 -2px 10px rgba(0, 0, 0, 0.6),
      inset 0 1px 4px rgba(0, 0, 0, 0.9),
      0 0 30px 5px rgba(147, 51, 234, 0.8),
      0 0 60px 10px rgba(59, 130, 246, 0.5),
      0 0 90px 15px rgba(147, 51, 234, 0.3);
  }
}

@keyframes siriPulse {
  0%, 100% {
    box-shadow: 
      inset 0 2px 10px rgba(0, 0, 0, 0.8),
      inset 0 -2px 4px rgba(255, 255, 255, 0.02),
      inset 0 0 50px rgba(147, 51, 234, 0.3);
  }
  50% {
    box-shadow: 
      inset 0 2px 10px rgba(0, 0, 0, 0.8),
      inset 0 -2px 4px rgba(255, 255, 255, 0.02),
      inset 0 0 50px rgba(59, 130, 246, 0.5);
  }
}

.track-nub-container.long-press .nub-surface {
  background: radial-gradient(
    circle at center, 
    rgba(147, 51, 234, 0.6) 0%, 
    rgba(59, 130, 246, 0.3) 50%,
    transparent 70%
  );
  opacity: 1;
  width: 100px;
  height: 100px;
  animation: nubGlow 2s ease-in-out infinite;
}

@keyframes nubGlow {
  0%, 100% {
    transform: translate(-50%, -50%) scale(1);
  }
  50% {
    transform: translate(-50%, -50%) scale(1.2);
  }
}

@media (max-width: 768px) {
  .track-nub-container {
    width: 90px;
    height: 90px;
    padding: 15px;
    border-radius: 45px 0 0 0;
  }
  
  .track-nub {
    width: 60px;
    height: 60px;
  }
  
  .track-nub::after {
    width: 80px;
    height: 80px;
  }
}

/* Cursor mode indicator */
.cursor-mode-indicator {
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%);
  margin-bottom: 10px;
  padding: 4px 12px;
  background: rgba(0, 122, 255, 0.9);
  color: white;
  font-size: 12px;
  font-weight: 600;
  border-radius: 12px;
  pointer-events: none;
  animation: fadeInScale 0.2s ease-out;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
}

@keyframes fadeInScale {
  from {
    opacity: 0;
    transform: translateX(-50%) scale(0.8);
  }
  to {
    opacity: 1;
    transform: translateX(-50%) scale(1);
  }
}